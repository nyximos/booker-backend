plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.booker'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def querydslVersion = '5.1.0'
def lombokVersion = '1.18.32'
def mapstructVersion = '1.5.5.Final'
def lombokMapStructBindingVersion = '0.2.0'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation ('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    implementation "com.querydsl:querydsl-apt:${querydslVersion}"
    implementation "com.querydsl:querydsl-core:${querydslVersion}"

    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBindingVersion}"
    //mapstruct 추가
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapStructBindingVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
